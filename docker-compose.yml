version: "3.5"

services:
  php:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    container_name: uac_php
    volumes:
      - ./:/var/www/html:Z
      - ./docker/php/www.conf:/usr/local/etc/php-fpm.d/www.conf
    networks:
      - project
    depends_on:
      - database
      - redis
    environment:
      APP_ENV: production
      CONTAINER_ROLE: app
    restart: on-failure

  database:
    image: mysql:8.0
    container_name: uac_database
    volumes:
      - ./docker/.data/mysql:/var/lib/mysql
    ports:
      - "${DOCKER_DB_EXTERNAL_PORT:-23306}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "${DOCKER_DB_ROOT_PASSWORD}"
      MYSQL_DATABASE: "${DB_DATABASE}"
      MYSQL_USER: "${DB_USERNAME}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
    networks:
      - project
    restart: on-failure

  nginx:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    container_name: uac_nginx
    ports:
      - "${DOCKER_EXTERNAL_APP_PORT:-80}:80"
      - "443:443"
    volumes:
      - ./:/var/www/html:Z
      - ./docker/nginx/config/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/config/r.wildbus.ca.conf:/etc/nginx/conf.d/default.conf
      - ./docker/.data/certbot/conf:/etc/letsencrypt
      - ./docker/.data/certbot/www:/var/www/certbot
    networks:
      - project
    depends_on:
      - php
    restart: on-failure
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    build:
      context: ./docker/certbot
      dockerfile: Dockerfile
    container_name: uac_certbot
    volumes:
      - ./docker/.data/certbot/conf:/etc/letsencrypt
      - ./docker/.data/certbot/www:/var/www/certbot
#      - ./docker/certbot/cloudflare.ini:/cloudflare.ini:ro
      - ./docker/certbot/entrypoint_acme.sh:/docker/certbot/entrypoint.sh:ro
    entrypoint: /docker/certbot/entrypoint.sh

  scheduler:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    container_name: uac_scheduler
    volumes:
      - ./:/var/www/html:Z
      - ./docker/php/www.conf:/usr/local/etc/php-fpm.d/www.conf
    networks:
      - project
    environment:
      APP_ENV: production
      CONTAINER_ROLE: scheduler
    restart: on-failure:5
    depends_on:
      - database
      - redis
      - php

  redis:
    image: redis
    container_name: uac_redis
#    ports:
#      - "${DOCKER_EXTERNAL_REDIS_PORT:-16379}:6379"
    networks:
      - project
    volumes:
      - ./docker/.data/redis:/data
    restart: on-failure

  queue:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    container_name: uac_queue
    volumes:
      - ./:/var/www/html:Z
      - ./docker/php/www.conf:/usr/local/etc/php-fpm.d/www.conf
      - ./docker/queue/supervisord.conf:/etc/supervisor/supervisord.conf
      - ./docker/.data/certbot/conf:/etc/letsencrypt
    networks:
      - project
    depends_on:
      - database
      - redis
      - php
    environment:
      APP_ENV: production
      CONTAINER_ROLE: queue
    restart: on-failure:5

networks:
  project:
    driver: "bridge"
